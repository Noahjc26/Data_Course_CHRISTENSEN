ggplot(data=A_states,
aes(x=ymd(Last_Update),
y=Deaths,
)) +
geom_point(alpha=1,
size=.1) +
facet_wrap(~Province_State,
scales="free") +
geom_smooth(method = "lm",
se = FALSE,
)
ggplot(data=A_states,
aes(x=ymd(Last_Update),
y=Deaths,
)) +
geom_point(alpha=1,
size=.01) +
facet_wrap(~Province_State,
scales="free") +
geom_smooth(method = "lm",
se = FALSE,
)
ggplot(data=A_states,
aes(x=ymd(Last_Update),
y=Deaths,
)) +
geom_point(alpha=1,
size=.2) +
facet_wrap(~Province_State,
scales="free") +
geom_smooth(method = "lm",
se = FALSE,
)
ggplot(data=A_states,
aes(x=ymd(Last_Update),
y=Deaths,
)) +
geom_point(alpha=.5,
size=.2) +
facet_wrap(~Province_State,
scales="free") +
geom_smooth(method = "lm",
se = FALSE,
)
ggplot(data=A_states,
aes(x=ymd(Last_Update),
y=Deaths,
)) +
geom_point(alpha=.5,
size=.2) +
facet_wrap(~Province_State,
scales="free") +
geom_smooth(method = "lm",
se = FALSE,
) +
labs(x="DATE (year-month-day)",
y="Number of Deaths")
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- CCD(max(na.rm = TRUE,CCD$Case_Fatality_Ratio)
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- CCD(max(na.rm = TRUE,CCD$Case_Fatality_Ratio))
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- CCD(max(CCD$Case_Fatality_Ratio))
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- CCD(max(Case_Fatality_Ratio))
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- subset(CCD(maxCase_Fatality_Ratio))
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- subset(CCD,max(Case_Fatality_Ratio)))
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- subset(CCD,max(Case_Fatality_Ratio))
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- subset(CCD,grepl(max(Case_Fatality_Ratio)))
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- subset(CCD,grepl(max,Case_Fatality_Ratio))
#4 Peak Case_Fatality_Ratio
class(CCD$Case_Fatality_Ratio)
state_max_fatality_rate <- subset(CCD,grepl(max,Case_Fatality_Ratio))
state_max_fatality_rate <- subset(CCD,grepl(,Case_Fatality_Ratio))
state_max_fatality_rate <- subset(CCD,grepl("3",Case_Fatality_Ratio))
)
state_max_fatality_rate <- subset(CCD,grepl(max.col() ,Case_Fatality_Ratio)
View(state_max_fatality_rate)
CCD %>%
group_by(Case_Fatality_Ratio) %>%
slice(which.max(Province_State))
#4 Peak Case_Fatality_Ratio
sorted_CCD <- CCD[order(CCD$Case_Fatality_Ratio, -CCD$Province_State),]
#4 Peak Case_Fatality_Ratio
sorted_CCD <- CCD[order(CCD$Case_Fatality_Ratio,]
#4 Peak Case_Fatality_Ratio
sorted_CCD <- CCD[order(CCD$Case_Fatality_Ratio,)
#4 Peak Case_Fatality_Ratio
sorted_CCD <- CCD[order(CCD$Case_Fatality_Ratio,)]
#4 Peak Case_Fatality_Ratio
sorted_CCD <- (order(CCD$Case_Fatality_Ratio,))
#4 Peak Case_Fatality_Ratio
sorted_CCD <- order(CCD$Case_Fatality_Ratio,)
#4 Peak Case_Fatality_Ratio
sorted_CCD <- order(CCD$Case_Fatality_Ratio,)
#4 Peak Case_Fatality_Ratio
sorted_CCD <- order[CCD$Case_Fatality_Ratio,]
#4 Peak Case_Fatality_Ratio
sorted_CCD <- order[CCD$Case_Fatality_Ratio, ]
#4 Peak Case_Fatality_Ratio
sorted_CCD <- order(na.last = TRUE, CCD$Case_Fatality_Ratio)
#4 Peak Case_Fatality_Ratio
sorted_CCD <- order(CCD$Case_Fatality_Ratio, na.last = TRUE)
#4 Peak Case_Fatality_Ratio
sorted_CCD <- subset(CCD, order(CCD$Case_Fatality_Ratio, na.last = TRUE))
#4 Peak Case_Fatality_Ratio
sorted_CCD <- subset(CCD,
order(Case_Fatality_Ratio, na.last = TRUE))
#4 Peak Case_Fatality_Ratio
sorted_CCD <- subset(CCD,
order(Case_Fatality_Ratio, na.last = TRUE))
sorted_group <- CCD[order(CCD$Case_Fatality_Ratio, -CCD$Province_State),]
sorted_group <- CCD(order(CCD$Case_Fatality_Ratio, -CCD$Province_State),)
sorted_group <- CCD(order(CCD$Case_Fatality_Ratio, CCD$Province_State),)
sorted_group <- subset(CCD(order(CCD$Case_Fatality_Ratio, CCD$Province_State),)
sorted_group <- subset(CCD(order(CCD$Case_Fatality_Ratio, CCD$Province_State),))
#4 Peak Case_Fatality_Ratio
install.packages("data.table")
library("data.table")
setDT(CCD)[ , .SD[which.max(CCD$Case_Fatality_Ratio)], by = Province_State]
#4 Peak Case_Fatality_Ratio
CCD %>%
group_by(Province_State, ) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE))
#4 Peak Case_Fatality_Ratio
CCD %>%
group_by(Province_State, ) +
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE))
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate<- CCD %>%
group_by(Province_State, ) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE))
View(state_max_fatality_rate)
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate<- CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE))
state_max_fatality_rate <- (!duplicated(state_max_fatality_rate$Case_Fatality_Ratio), )
state_max_fatality_rate(!duplicated(state_max_fatality_rate$Case_Fatality_Ratio), )
state_max_fatality_rate(!duplicated(state_max_fatality_rate$Case_Fatality_Ratio))
state_max_fatality_rate[!duplicated(state_max_fatality_rate$Province_State), ]
cleans_state_max_fatality_rate <- state_max_fatality_rate[!duplicated(state_max_fatality_rate$Province_State), ]
View(cleans_state_max_fatality_rate)
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE,))
library(tidyverse)
#1 Read into R Data Frame
CCD <- read.csv("./Exam_1/cleaned_covid_data.csv")
A_states<- subset(CCD, grepl("^A",Province_State))
#3 Plot
class(A_states$Last_Update)
ggplot(data=A_states,
aes(x=ymd(Last_Update),
y=Deaths,
)) +
geom_point(alpha=.5,
size=.2) +
facet_wrap(~Province_State,
scales="free") +
geom_smooth(method = "lm",
se = FALSE,
) +
labs(x="DATE (year-month-day)",
y="Number of Deaths")
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE,))
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE,))
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE,))
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE))
no_duplicate_state_max_fatality_rate <- state_max_fatality_rate[!duplicated(state_max_fatality_rate$Province_State), ]
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=FALSE))
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=FALSE))
View(state_max_fatality_rate)
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE))
no_duplicate_state_max_fatality_rate <-
state_max_fatality_rate[!duplicated(state_max_fatality_rate$Province_State)]
no_duplicate_state_max_fatality_rate <-
state_max_fatality_rate[!duplicated(state_max_fatality_rate$Province_State),]
#4 Peak Case_Fatality_Ratio
CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE))  %>%
state_max_fatality_rate
#4 Peak Case_Fatality_Ratio
CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE))  %>%
tibble(state_max_fatality_rate)
#1 Read into R Data Frame
CCD <- read.csv("./Exam_1/cleaned_covid_data.csv")
#4 Peak Case_Fatality_Ratio
CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE))  %>%
tibble(state_max_fatality_rate)
library(tidyverse)
#1 Read into R Data Frame
CCD <- read.csv("./Exam_1/cleaned_covid_data.csv")
#2 Subset into data with only states starting with A
A_states<- subset(CCD, grepl("^A",Province_State))
#3 Plot
class(A_states$Last_Update)
ggplot(data=A_states,
aes(x=ymd(Last_Update),
y=Deaths,
)) +
geom_point(alpha=.5,
size=.2) +
facet_wrap(~Province_State,
scales="free") +
geom_smooth(method = "lm",
se = FALSE,
) +
labs(x="DATE (year-month-day)",
y="Number of Deaths")
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE))
no_duplicate_state_max_fatality_rate <-
state_max_fatality_rate[!duplicated(state_max_fatality_rate$Province_State),]
arrange(no_duplicate_state_max_fatality_rate,by_group(Case_Fatality_Ratio))
arrange(no_duplicate_state_max_fatality_rate,Case_Fatality_Ratio)
View(no_duplicate_state_max_fatality_rate)
?arrange
arrange(data=no_duplicate_state_max_fatality_rate,group_by(Case_Fatality_Ratio))
arrange(data=no_duplicate_state_max_fatality_rate,(Case_Fatality_Ratio))
arrange(data=no_duplicate_state_max_fatality_rate,(no_duplicate_state_max_fatality_rate$Case_Fatality_Ratio))
sort(data=no_duplicate_state_max_fatality_rate,(no_duplicate_state_max_fatality_rate$Case_Fatality_Ratio))
sort.int(data=no_duplicate_state_max_fatality_rate,(no_duplicate_state_max_fatality_rate$Case_Fatality_Ratio))
sort.list(data=no_duplicate_state_max_fatality_rate,(no_duplicate_state_max_fatality_rate$Case_Fatality_Ratio))
no_duplicate_state_max_fatality_rate$Case_Fatality_Ratio,decreasing=TRUE
sorted_max <- sort(no_duplicate_state_max_fatality_rate$Case_Fatality_Ratio, decreasing=TRUE)
sorted_max <- arrange(no_duplicate_state_max_fatality_rate$Case_Fatality_Ratio, decreasing=TRUE)
sorted_max <- sort.list(no_duplicate_state_max_fatality_rate$Case_Fatality_Ratio, decreasing=TRUE)
sorted_max <- sort.list(no_duplicate_state_max_fatality_rate$Case_Fatality_Ratio, decreasing=TRUE)
no_duplicate_state_max_fatality_rate[order(no_duplicate_state_max_fatality_rate)]
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE)) %>%
order(-Case_Fatality_Ratio)
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE)) %>%
order(-Case_Fatality_Ratio)
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE)) %>%
order(Case_Fatality_Ratio)
no_duplicate_state_max_fatality_rate(order(Case_Fatality_Ratio))
no_duplicate_state_max_fatality_rate[order(Case_Fatality_Ratio)]
no_duplicate_state_max_fatality_rate[order(no_duplicate_state_max_fatality_rate)]
no_duplicate_state_max_fatality_rate[order(no_duplicate_state_max_fatality_rate$Case_Fatality_Ratio)]
no_duplicate_state_max_fatality_rate[order(-no_duplicate_state_max_fatality_rate$Case_Fatality_Ratio)]
no_duplicate_state_max_fatality_rate[order(-no_duplicate_state_max_fatality_rate$Case_Fatality_Ratio),]
no_duplicate_state_max_fatality_rate[order(-no_duplicate_state_max_fatality_rate$Case_Fatality_Ratio),,]
sorted_case_fatalities <- no_duplicate_state_max_fatality_rate[order(-no_duplicate_state_max_fatality_rate$Case_Fatality_Ratio),,]
View(sorted_case_fatalities)
sorted_case_fatalities <- no_duplicate_state_max_fatality_rate[order(-no_duplicate_state_max_fatality_rate$Case_Fatality_Ratio),]
library(tidyverse)
#1 Read into R Data Frame
CCD <- read.csv("./Exam_1/cleaned_covid_data.csv")
#2 Subset into data with only states starting with A
A_states<- subset(CCD, grepl("^A",Province_State))
#3 Plot
class(A_states$Last_Update)
ggplot(data=A_states,
aes(x=ymd(Last_Update),
y=Deaths,
)) +
geom_point(alpha=.5,
size=.2) +
facet_wrap(~Province_State,
scales="free") +
geom_smooth(method = "lm",
se = FALSE,
) +
labs(x="DATE (year-month-day)",
y="Number of Deaths")
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE))
no_duplicate_state_max_fatality_rate[order(Case_Fatality_Ratio)]
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE))
no_duplicate_state_max_fatality_rate[order(Case_Fatality_Ratio)]
library(tidyverse)
#1 Read into R Data Frame
CCD <- read.csv("./Exam_1/cleaned_covid_data.csv")
#2 Subset into data with only states starting with A
A_states<- subset(CCD, grepl("^A",Province_State))
#3 Plot
class(A_states$Last_Update)
ggplot(data=A_states,
aes(x=ymd(Last_Update),
y=Deaths,
)) +
geom_point(alpha=.5,
size=.2) +
facet_wrap(~Province_State,
scales="free") +
geom_smooth(method = "lm",
se = FALSE,
) +
labs(x="DATE (year-month-day)",
y="Number of Deaths")
#4 Peak Case_Fatality_Ratio
state_max_fatality_rate <- CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE))
no_duplicate_state_max_fatality_rate <-
state_max_fatality_rate[!duplicated(state_max_fatality_rate$Province_State),]
sorted_case_fatalities <- no_duplicate_state_max_fatality_rate[order(-no_duplicate_state_max_fatality_rate$Case_Fatality_Ratio)]
sorted_case_fatalities <- no_duplicate_state_max_fatality_rate[order(-no_duplicate_state_max_fatality_rate$Case_Fatality_Ratio),]
View(sorted_case_fatalities)
#4 Peak Case_Fatality_Ratio
fatality_rate_temp1 <- CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE))
library(tidyverse)
#1 Read into R Data Frame
CCD <- read.csv("./Exam_1/cleaned_covid_data.csv")
#2 Subset into data with only states starting with A
A_states<- subset(CCD, grepl("^A",Province_State))
#3 Plot
class(A_states$Last_Update)
ggplot(data=A_states,
aes(x=ymd(Last_Update),
y=Deaths,
)) +
geom_point(alpha=.5,
size=.2) +
facet_wrap(~Province_State,
scales="free") +
geom_smooth(method = "lm",
se = FALSE,
) +
labs(x="DATE (year-month-day)",
y="Number of Deaths")
#4 Peak Case_Fatality_Ratio
fatality_rate_temp1 <- CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE))
fatality_rate_temp2 <-
fatalilty_rate_temp2[!duplicated(fatality_rate_temp1$Province_State),]
fatality_rate_temp2 <-
fatalilty_rate_temp1[!duplicated(fatality_rate_temp1$Province_State),]
fatality_rate_temp2 <-
fatalilty_rate_temp1[!duplicated(fatality_rate_temp1$Province_State),]
#4 Peak Case_Fatality_Ratio
fatality_rate_temp1 <- CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE))
fatality_rate_temp2 <-
fatalilty_rate_temp1[!duplicated(fatality_rate_temp1$Province_State),]
View(fatality_rate_temp1)
fatality_rate_temp2 <- fatalilty_rate_temp1[!duplicated(fatality_rate_temp1$Province_State),]
library(tidyverse)
#1 Read into R Data Frame
CCD <- read.csv("./Exam_1/cleaned_covid_data.csv")
#2 Subset into data with only states starting with A
A_states<- subset(CCD, grepl("^A",Province_State))
#3 Plot
class(A_states$Last_Update)
ggplot(data=A_states,
aes(x=ymd(Last_Update),
y=Deaths,
)) +
geom_point(alpha=.5,
size=.2) +
facet_wrap(~Province_State,
scales="free") +
geom_smooth(method = "lm",
se = FALSE,
) +
labs(x="DATE (year-month-day)",
y="Number of Deaths")
#4 Peak Case_Fatality_Ratio
fatality_rate_temp1 <- CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE))
fatality_rate_temp2 <- fatalilty_rate_temp1[!duplicated(fatality_rate_temp1$Province_State),]
fatality_rate_temp2 <- fatality_rate_temp1[!duplicated(fatality_rate_temp1$Province_State),]
state_max_fatality_rate <- fatality_rate_temp2[order(-fatality_rate_temp2$Case_Fatality_Ratio),]
library(tidyverse)
#1 Read into R Data Frame
CCD <- read.csv("./Exam_1/cleaned_covid_data.csv")
#2 Subset into data with only states starting with A
A_states<- subset(CCD, grepl("^A",Province_State))
#3 Plot
class(A_states$Last_Update)
ggplot(data=A_states,
aes(x=ymd(Last_Update),
y=Deaths,
)) +
geom_point(alpha=.5,
size=.2) +
facet_wrap(~Province_State,
scales="free") +
geom_smooth(method = "lm",
se = FALSE,
) +
labs(x="DATE (year-month-day)",
y="Number of Deaths")
#4 Peak Case_Fatality_Ratio
fatality_rate_temp1 <- CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE))
fatality_rate_temp2 <- fatality_rate_temp1[!duplicated(fatality_rate_temp1$Province_State),]
fatality_rate_temp3 <- fatality_rate_temp2[order(-fatality_rate_temp2$Case_Fatality_Ratio),]
state_max_fatality_rate = fatality_rate_temp3[c("Province_state","Case_Fatality_Ratio")]
state_max_fatality_rate = fatality_rate_temp3[c("Province_State","Case_Fatality_Ratio")]
View(state_max_fatality_rate)
state_max_fatality_rate <- state_max_fatality_rate %>%
rename("Case_Fatality_Ratio" = "Maximum_Fatality_Ratio")
state_max_fatality_rate <- state_max_fatality_rate %>%
rename("Maximum_Fatality_Ratio" = "Case_Fatality_Ratio")
library(tidyverse)
#1 Read into R Data Frame
CCD <- read.csv("./Exam_1/cleaned_covid_data.csv")
#2 Subset into data with only states starting with A
A_states<- subset(CCD, grepl("^A",Province_State))
#3 Plot
class(A_states$Last_Update)
ggplot(data=A_states,
aes(x=ymd(Last_Update),
y=Deaths,
)) +
geom_point(alpha=.5,
size=.2) +
facet_wrap(~Province_State,
scales="free") +
geom_smooth(method = "lm",
se = FALSE,
) +
labs(x="DATE (year-month-day)",
y="Number of Deaths")
#4 Peak Case_Fatality_Ratio
#creating first temporary data frame to find max Case_Fatality_Ratio and remove NA
fatality_rate_temp1 <- CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE)) %>%
rename("Maximum_Fatality_Ratio" = "Case_Fatality_Ratio")
View(fatality_rate_temp1)
library(tidyverse)
#1 Read into R Data Frame
CCD <- read.csv("./Exam_1/cleaned_covid_data.csv")
#2 Subset into data with only states starting with A
A_states<- subset(CCD, grepl("^A",Province_State))
#3 Plot
class(A_states$Last_Update)
ggplot(data=A_states,
aes(x=ymd(Last_Update),
y=Deaths,
)) +
geom_point(alpha=.5,
size=.2) +
facet_wrap(~Province_State,
scales="free") +
geom_smooth(method = "lm",
se = FALSE,
) +
labs(x="DATE (year-month-day)",
y="Number of Deaths")
#4 Peak Case_Fatality_Ratio
#creating first temporary data frame to find max Case_Fatality_Ratio and remove NA
fatality_rate_temp1 <- CCD %>%
group_by(Province_State) %>%
filter(Case_Fatality_Ratio == max(Case_Fatality_Ratio, na.rm=TRUE)) %>%
rename("Maximum_Fatality_Ratio" = "Case_Fatality_Ratio")
#creating second temporary data frame to remove any duplicate states
fatality_rate_temp2 <- fatality_rate_temp1[!duplicated(fatality_rate_temp1$Province_State),]
#creating third temporary data frame to sort by Maximum_Fatality_Ratio in descending order
fatality_rate_temp3 <- fatality_rate_temp2[order(-fatality_rate_temp2$Maximum_Fatality_Ratio),]
#creating final data frame with only the two columns "Province_State" and "Maximum_Fatality_Ratio"
state_max_fatality_rate = fatality_rate_temp3[c("Province_State","Maximum_Fatality_Ratio")]
View(state_max_fatality_rate)
#5
gc()
