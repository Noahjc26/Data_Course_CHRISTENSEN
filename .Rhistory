color='hotpink',
size=16,
hjust = 0,
vjust = -50,
angle = 180,),
legend.background = element_rect(fill='green'),
legend.title = element_text(color='pink',
angle=90,
size = 120,
face='italic'
),
strip.text = element_text(color='yellow'),
panel.grid = element_line(size=5,
color='black'),
panel.background = element_rect(fill = 'yellow'),
plot.background = element_rect(fill='black')
)
p + theme(axis.title.x = element_text(face = 'bold',
color='hotpink',
size=16,
hjust = 0,
vjust = -50,
angle = 180,),
legend.background = element_rect(fill='green'),
legend.title = element_text(color='pink',
angle=90,
size = 120,
face='italic'
),
strip.text = element_text(color='yellow'),
panel.grid = element_line(size=5,
color='black'),
panel.background = element_rect(fill = 'yellow'),
plot.background = element_rect(fill='black')
) %>% theme_set()
p + theme(axis.title.x = element_text(face = 'bold',
color='hotpink',
size=16,
hjust = 0,
vjust = -50,
angle = 180,),
legend.background = element_rect(fill='green'),
legend.title = element_text(color='pink',
angle=90,
size = 120,
face='italic'
),
strip.text = element_text(color='yellow'),
panel.grid = element_line(size=5,
color='black'),
panel.background = element_rect(fill = 'yellow'),
plot.background = element_rect(fill='black')
) %>% theme_set()
p <-  penguins %>%
ggplot(aes(x=species, y=bill_length_mm, fill=species)) +
geom_violin() +
geom_point(alpha=0.25,shape=4) +
facet_wrap(~sex)
p
p + theme(axis.title.x = element_text(face = 'bold',
color='hotpink',
size=16,
hjust = 0,
vjust = -50,
angle = 180,),
legend.background = element_rect(fill='green'),
legend.title = element_text(color='pink',
angle=90,
size = 120,
face='italic'
),
strip.text = element_text(color='yellow'),
panel.grid = element_line(size=5,
color='black'),
panel.background = element_rect(fill = 'yellow'),
plot.background = element_rect(fill='black')
) %>% theme_set()
install.packages("readxl")
library(readxl)
df <- read_xlsx("./Exercises/organized dataset.xlsx")
View(df)
install.packages("janitor")
library(janitor)
library(tidyverse)
names(df)
clean_names(df)
df %>%
pivot_longer(cols = c("week_1", "week_2", "week_3", "week_4"),names_to = "amount")
df %>%
pivot_longer(cols = c("week_1", "week_2", "week_3", "week_4"),names_to = "week",values_to = "amount")
names(df)
clean_names(df) #Cleans names of columns
df %>%
pivot_longer(cols = c("week_1", "week_2", "week_3", "week_4"),names_to = "week",values_to = "amount")
df <- clean_names(df) #Cleans names of columns
df %>%
pivot_longer(cols = c("week_1", "week_2", "week_3", "week_4"),names_to = "week",values_to = "amount")
df %>%
pivot_longer(cols = c("week_1", "week_2", "week_3", "week_4"),names_to = "week",values_to = "amount") %>%
separate(col = "site",into = c("location","number"),sep = " ")
library(lubridate)
df %>%
pivot_longer(cols = c("week_1", "week_2", "week_3", "week_4"),names_to = "week",values_to = "amount") %>%
source("~/Desktop/Data_Course_CHRISTENSEN/Exercises/Exercises.R", echo=TRUE)
df %>%
pivot_longer(cols = c("week_1", "week_2", "week_3", "week_4"),names_to = "week",values_to = "amount") %>%
separate(col = "site",into = c("location","number"),sep = " ")
df
df %>%
pivot_longer(cols = c("week_1", "week_2", "week_3", "week_4"),names_to = "week",values_to = "amount") %>%
df %>%
pivot_longer(cols = starts_with("week"),names_to = "week",values_to = "amount") %>%
separate(col = "site",into = c("location","number"),sep = " ")
df %>%
pivot_longer(cols = starts_with("week"),names_to = "week",values_to = "amount") %>%
separate(col = "site",into = c("location","number"),sep = " ")
df %>%
pivot_longer(cols = starts_with("week"),
names_to = "week",
values_to = "amount",
names_ptypes = "week_") %>%
separate(col = "site",into = c("location","number"),sep = " ")
df %>%
pivot_longer(cols = starts_with("week"),
names_to = "week",
values_to = "amount",
names_ptypes = "week_") %>%
separate(col = "site",into = c("location","number"),sep = " ")
df %>%
pivot_longer(cols = starts_with("week"),
names_to = "week",
values_to = "amount",
names_prefix = "week_",
names_transform = as.numeric()) %>%
separate(col = "site",into = c("location","number"),sep = " ")
names_transform = as.numeric %>%
df %>%
pivot_longer(cols = starts_with("week"),
names_to = "week",
values_to = "amount",
names_prefix = "week_",
names_transform = as.numeric) %>%
separate(col = "site",into = c("location","number"),sep = " ")
df %>%
pivot_longer(cols = starts_with("week"),
names_to = "week",
values_to = "amount",
names_prefix = "week_",
names_transform = as.numeric)
df <-
df %>%
pivot_longer(cols = starts_with("week"),
names_to = "week",
values_to = "amount",
names_prefix = "week_",
names_transform = as.numeric)
df$site
df$site %>%
str_replace(" Pool","Pool")
df <-
df %>%
pivot_longer(cols = starts_with("week"),
names_to = "week",
values_to = "amount",
names_prefix = "week_",
names_transform = as.numeric) %>%
separate(col = "site",into = c("location","number"),sep = " ")
df <-
df %>%
pivot_longer(cols = starts_with("week"),
names_to = "week",
values_to = "amount",
names_prefix = "week_",
names_transform = as.numeric) %>%
separate(col = "site",into = c("location","number"),sep = " ")
df
df$site <-
df$site %>%
str_replace(" Pool","Pool")
df
df %>%
pivot_longer(cols = starts_with("week"),
names_to = "week",
values_to = "amount",
names_prefix = "week_",
names_transform = as.numeric) %>%
separate(col = "site",into = c("location","number"),sep = " ")
#read in data from excel
df <- read_xlsx("./Exercises/organized dataset.xlsx")
names(df)
df <- clean_names(df) #Cleans names of columns
df$site <-
df$site %>%
str_replace(" Pool","Pool")
df
df %>%
pivot_longer(cols = starts_with("week"),
names_to = "week",
values_to = "amount",
names_prefix = "week_",
names_transform = as.numeric) %>%
separate(col = "site",into = c("location","number"),sep = " ")
df %>%
pivot_longer(cols = starts_with("week"),
names_to = "week",
values_to = "amount",
names_prefix = "week_",
names_transform = as.numeric) %>%
separate(col = "site",into = c("location","site"),sep = " ")
case_when(location == "Hatchery" ~ "HAT"))
#changing sewage pool to SEP and hatchery to HAT
df2 %>%
mutate(new_location = (case_when(location == "SewagePool" ~ "SEP"),
#changing sewage pool to SEP and hatchery to HAT
df2 %>%
mutate(new_location = case_when(location == "SewagePool" ~ "SEP"),
(location == "Hatchery" ~ "HAT"))
#changing sewage pool to SEP and hatchery to HAT
df %>%
mutate(new_location = case_when(location == "SewagePool" ~ "SEP"),
(location == "Hatchery" ~ "HAT"))
#changing sewage pool to SEP and hatchery to HAT
df %>%
mutate(new_location = case_when(location == "SewagePool" ~ "SEP",
location == "Hatchery" ~ "HAT"))
df <-
df %>%
pivot_longer(cols = starts_with("week"),
names_to = "week",
values_to = "amount",
names_prefix = "week_",
names_transform = as.numeric) %>%
separate(col = "site",into = c("location","site"),sep = " ")
#changing sewage pool to SEP and hatchery to HAT
df %>%
mutate(new_location = case_when(location == "SewagePool" ~ "SEP",
location == "Hatchery" ~ "HAT"))
#changing sewage pool to SEP and hatchery to HAT
df %>%
mutate(location = case_when(location == "SewagePool" ~ "SEP",
location == "Hatchery" ~ "HAT"))
library(tidyverse)
library(janitor)
library(readxl)
path <- "./Data/messy_bp.xlsx"
df <- read_xlsx(path, range = "A4:M24")
visits <- read_xlsx(path,skip = 2,n_max = 1)
visits <- read_xlsx(path,skip = 2,n_max = 0) # skipping 2 rows and setting max number of rows to 1
View(visits)
visits <- read_xlsx(path,skip = 2,n_max = 0) %>% names()# skipping 2 rows and setting max number of rows to 1
df <- read_xlsx(path, range = "A4:M24") %>%
clean_names()
name == "Bp_12" ~ 3)
df %>%
pivot_longer(starts_with("bp_")) %>%
mutate(Visit = case_when(name == "Bp_8" ~ 1,
name == "Bp_10" ~ 2,
name == "Bp_12" ~ 3))
df %>%
pivot_longer(starts_with("bp_")) %>%
mutate(Visit = case_when(name == "Bp_8" ~ 1,
name == "Bp_10" ~ 2,
name == "Bp_12" ~ 3))
df %>%
pivot_longer(starts_with("bp_")) %>%
mutate(Visit = case_when(name == "bp_8" ~ 1,
name == "bp_10" ~ 2,
name == "bp_12" ~ 3))
df %>%
pivot_longer(starts_with("bp_")) %>%
mutate(Visit = case_when(name == "bp_8" ~ 1,
name == "bp_10" ~ 2,
name == "bp_12" ~ 3)) %>%
pivot_longer(starts_with("hr_"),
names_to = "visit2",
values_drop_na = "heart_rate")
df %>%
pivot_longer(starts_with("bp_")) %>%
mutate(Visit = case_when(name == "bp_8" ~ 1,
name == "bp_10" ~ 2,
name == "bp_12" ~ 3)) %>%
pivot_longer(starts_with("hr_"),
names_to = "visit2",
values_to = "heart_rate")
df %>%
pivot_longer(starts_with("bp_"),
values_to = "bp") %>%
mutate(Visit = case_when(name == "bp_8" ~ 1,
name == "bp_10" ~ 2,
name == "bp_12" ~ 3)) %>%
pivot_longer(starts_with("hr_"),
names_to = "visit2",
values_to = "heart_rate")
df %>%
select(-starts_with("hr_")) #for picking columns
df %>%
select(-starts_with("hr_")) %>% #for picking columns
pivot_longer(starts_with("bp_"),
values_to = "bp") %>%
mutate(Visit = case_when(name == "bp_8" ~ 1,
name == "bp_10" ~ 2,
name == "bp_12" ~ 3))
df %>%
select(-starts_with("hr_")) %>% #for picking columns
pivot_longer(starts_with("bp_"),
values_to = "bp") %>%
mutate(Visit = case_when(name == "bp_8" ~ 1,
name == "bp_10" ~ 2,
name == "bp_12" ~ 3)) %>%
select(-name) %>%
separate(bp, into = c("systolic","diastolic"))
bp <-
df %>%
select(-starts_with("hr_")) %>% #for picking columns
pivot_longer(starts_with("bp_"),
values_to = "bp") %>%
mutate(Visit = case_when(name == "bp_8" ~ 1,
name == "bp_10" ~ 2,
name == "bp_12" ~ 3)) %>%
select(-name) %>%
separate(bp, into = c("systolic","diastolic"))
df %>%
select(-starts_with("bp_")) %>%
pivot_longer(starts_with("hr_"),
values_to = "hr") %>%
mutate(Visit = case_when(name == "hr_9" ~ 1,
name == "hr_11" ~ 2,
name == "hr_13" ~ 3))
df %>%
select(-starts_with("bp_")) %>%
pivot_longer(starts_with("hr_"),
values_to = "hr") %>%
mutate(Visit = case_when(name == "hr_9" ~ 1,
name == "hr_11" ~ 2,
name == "hr_13" ~ 3)) %>%
select(-name)
hr <-
df %>%
select(-starts_with("bp_")) %>%
pivot_longer(starts_with("hr_"),
values_to = "hr") %>%
mutate(Visit = case_when(name == "hr_9" ~ 1,
name == "hr_11" ~ 2,
name == "hr_13" ~ 3)) %>%
select(-name)
full_join(bp,hr)
dat <-
full_join(bp,hr) #joining by all the ones in common
View(dat)
dat %>%
mutate(birthdate = paste0(c(year_birth,month_of_birth,day_birth)))
dat %>%
mutate(birthdate = paste0(year_birth,month_of_birth,day_birth,sep="-")) %>% as.POSIXct() #posixct is turning it into an actual date
dat %>%
mutate(birthdate = paste(year_birth,month_of_birth,day_birth,sep="-") %>% as.POSIXct()) #posixct is turning it into an actual date
dat <-
dat %>%
mutate(birthdate = paste(year_birth,month_of_birth,day_birth,sep="-") %>% as.POSIXct()) #posixct is turning it into an actual date
saveRDS(dat,"./Code_Examples/cleaned_bp.rds") #r data structure file
library(tidyverse)
readRDS("./Code_Examples/cleaned_bp.rds")
dat <- readRDS("./Code_Examples/cleaned_bp.rds")
names(dat)
library(GGally)
dat %>%
ggpairs()
library(GGally)
dat %>% ggpairs()
select(-c(pat_id,month_of_birth,day_birth,year_birth) %>%
dat %>%
dat %>%
select(-c(pat_id,month_of_birth,day_birth,year_birth)) %>%
ggpairs()
dat %>%
dat %>%
select(-c(pat_id,month_of_birth,day_birth,year_birth)) %>%
ggpairs(,cardinality_threshold = 33)
dat %>%
ggplot(aes(x=Visit,color=hispanic))
dat %>%
ggplot(aes(x=Visit,color=hispanic)) +
geom_path(aes(y=systolic),color='black')
View(dat)
dat %>%
ggplot(aes(x=Visit,color=hispanic)) +
geom_path(aes(y=systolic),color='black') +
geom_path(aes(y=diastolic),color='black')
View(dat)
dat %>%
ggplot(aes(x=Visit)) +
geom_path(aes(y=systolic),color='black') +
geom_path(aes(y=diastolic),color='black') +
facet_wrap(~hispanic)
dat %>%
ggplot(aes(x=Visit)) +
geom_path(aes(y=systolic),color='red') +
geom_path(aes(y=diastolic),color='black') +
facet_wrap(~hispanic)
dat %>%
ggplot(aes(x=Visit)) +
geom_point(aes(y=systolic),color='red') +
geom_point(aes(y=diastolic),color='black') +
facet_wrap(~hispanic)
View(dat)
#df %>%
#pivot_longer(starts_with("bp_"),
#            values_to = "bp") %>%
#mutate(Visit = case_when(name == "bp_8" ~ 1,
#                       name == "bp_10" ~ 2,
#                       name == "bp_12" ~ 3)) %>%
#  pivot_longer(starts_with("hr_"),
#              names_to = "visit2",
#             values_to = "heart_rate")
bp <-
df %>%
select(-starts_with("hr_")) %>% #for picking columns
pivot_longer(starts_with("bp_"),
values_to = "bp") %>%
mutate(Visit = case_when(name == "bp_8" ~ 1,
name == "bp_10" ~ 2,
name == "bp_12" ~ 3)) %>%
select(-name) %>%
separate(bp, into = c("systolic","diastolic"),convert = TRUE) #(convert) turning them into numeric values
#df %>%
#pivot_longer(starts_with("bp_"),
#            values_to = "bp") %>%
#mutate(Visit = case_when(name == "bp_8" ~ 1,
#                       name == "bp_10" ~ 2,
#                       name == "bp_12" ~ 3)) %>%
#  pivot_longer(starts_with("hr_"),
#              names_to = "visit2",
#             values_to = "heart_rate")
bp <-
df %>%
select(-starts_with("hr_")) %>% #for picking columns
pivot_longer(starts_with("bp_"),
values_to = "bp") %>%
mutate(Visit = case_when(name == "bp_8" ~ 1,
name == "bp_10" ~ 2,
name == "bp_12" ~ 3)) %>%
separate(bp, into = c("systolic","diastolic"), convert = TRUE) #(convert) turning them into numeric values
path <- "./Data/messy_bp.xlsx"
visits <- read_xlsx(path, skip = 2, n_max = 0) %>% names()# skipping 2 rows and setting max number of rows to 1
df <- read_xlsx(path, range = "A4:M24") %>%
clean_names()
#df %>%
#pivot_longer(starts_with("bp_"),
#            values_to = "bp") %>%
#mutate(Visit = case_when(name == "bp_8" ~ 1,
#                       name == "bp_10" ~ 2,
#                       name == "bp_12" ~ 3)) %>%
#  pivot_longer(starts_with("hr_"),
#              names_to = "visit2",
#             values_to = "heart_rate")
bp <-
df %>%
select(-starts_with("hr_")) %>% #for picking columns
pivot_longer(starts_with("bp_"),
values_to = "bp") %>%
mutate(Visit = case_when(name == "bp_8" ~ 1,
name == "bp_10" ~ 2,
name == "bp_12" ~ 3)) %>%
select(-name) %>%
separate(bp, into = c("systolic","diastolic"), convert = TRUE) #(convert) turning them into numeric values
hr <-
df %>%
select(-starts_with("bp_")) %>%
pivot_longer(starts_with("hr_"),
values_to = "hr") %>%
mutate(Visit = case_when(name == "hr_9" ~ 1,
name == "hr_11" ~ 2,
name == "hr_13" ~ 3)) %>%
select(-name)
dat <-
full_join(bp,hr) #joining by all the ones in common
dat <-
dat %>%
mutate(birthdate = paste(year_birth,
month_of_birth,
day_birth,
sep="-") %>%
as.POSIXct()) #posixct is turning it into an actual date
saveRDS(dat,"./Code_Examples/cleaned_bp.rds") #r data structure file, saves df and stuff in environment
dat <- readRDS("./Code_Examples/cleaned_bp.rds")
names(dat)
dat %>%
ggplot(aes(x=Visit)) +
geom_point(aes(y=systolic),color='red') +
geom_point(aes(y=diastolic),color='black') +
facet_wrap(~hispanic)
dat %>%
mutate(race = case_when(race == "WHITE" ~ "White",
race == "Caucasian" ~ "White",
TRUE ~ race)) #making it so it keeps all other stuff the same
dat <- dat %>%
mutate(race = case_when(race == "WHITE" ~ "White",
race == "Caucasian" ~ "White",
TRUE ~ race)) #making it so it keeps all other stuff the same
saveRDS(dat,"./Code_Examples/cleaned_bp.rds") #r data structure file, saves df and stuff in environment
dat <- readRDS("./Code_Examples/cleaned_bp.rds")
names(dat)
dat %>%
ggplot(aes(x=Visit)) +
geom_point(aes(y=systolic),color='red') +
geom_point(aes(y=diastolic),color='black') +
facet_wrap(~hispanic)
dat %>%
group_by(race) %>%
summarize(mean_bp = mean(systolic))
dat %>%
group_by(race,sex) %>%
summarize(mean_bp = mean(systolic))
