y= "Apparent Age (years)",
title = "Age Spectrum")
p
x2 <- subset(x, x$x39ar_released < 95)
x2 <- subset(x2, x$x39ar_released > 6)
p <- x %>%
ggplot(aes(x=x39ar_released,y=apparent_age)) +
geom_line() +
geom_line(data = x2, aes(x=x39ar_released, y=apparent_age), color="red") +
theme_bw() +
labs(x= "% of 39Ar Released",
y= "Apparent Age (years)",
title = "Age Spectrum")
p
x2 <- subset(x, x$x39ar_released < 97)
x2 <- subset(x2, x$x39ar_released > 6)
p <- x %>%
ggplot(aes(x=x39ar_released,y=apparent_age)) +
geom_line() +
geom_line(data = x2, aes(x=x39ar_released, y=apparent_age), color="red") +
theme_bw() +
labs(x= "% of 39Ar Released",
y= "Apparent Age (years)",
title = "Age Spectrum")
p
x2 <- subset(x, x$x39ar_released < 98)
x2 <- subset(x2, x$x39ar_released > 6)
p <- x %>%
ggplot(aes(x=x39ar_released,y=apparent_age)) +
geom_line() +
geom_line(data = x2, aes(x=x39ar_released, y=apparent_age), color="red") +
theme_bw() +
labs(x= "% of 39Ar Released",
y= "Apparent Age (years)",
title = "Age Spectrum")
p
x2 <- subset(x, x$x39ar_released < 99)
x2 <- subset(x2, x$x39ar_released > 6)
p <- x %>%
ggplot(aes(x=x39ar_released,y=apparent_age)) +
geom_line() +
geom_line(data = x2, aes(x=x39ar_released, y=apparent_age), color="red") +
theme_bw() +
labs(x= "% of 39Ar Released",
y= "Apparent Age (years)",
title = "Age Spectrum")
p
x2 <- subset(x2, x$x39ar_released > 4)
p <- x %>%
ggplot(aes(x=x39ar_released,y=apparent_age)) +
geom_line() +
geom_line(data = x2, aes(x=x39ar_released, y=apparent_age), color="red") +
theme_bw() +
labs(x= "% of 39Ar Released",
y= "Apparent Age (years)",
title = "Age Spectrum")
p
x2 <- subset(x, x$x39ar_released < 99)
x2 <- subset(x2, x$x39ar_released > 2)
p <- x %>%
ggplot(aes(x=x39ar_released,y=apparent_age)) +
geom_line() +
geom_line(data = x2, aes(x=x39ar_released, y=apparent_age), color="red") +
theme_bw() +
labs(x= "% of 39Ar Released",
y= "Apparent Age (years)",
title = "Age Spectrum")
p
summary(x2$apparent_age)
sd(x2$apparent_age)
sd(x2$apparent_age)
sd(x2$apparent_age,na.rm=TRUE)
summary(x2$apparent_age)
sd(x2$apparent_age,na.rm=TRUE)
ggsave("../../age_spectrum_1_hw2_isotope.png",p)
ggsave("../age_spectrum_1_hw2_isotope.png",p)
#   Part 2 D)
x <- read.delim(pipe("pbpaste")) %>%
clean_names()
p <- x %>%
ggplot(aes(x=x36ar_40ar,y=x39ar_40ar)) +
geom_smooth(method = 'lm',se=FALSE) +
stat_regline_equation(label.x=0.000009) +
theme_bw() +
labs( x= "36Ar/40Ar",
y= "39Ar/40Ar",
title = "Inverse Isochron")
sd(x$x36ar_40ar)
p
ggsave("../inverse_isochron_1_hw2_isotope.png",p)
p <- x %>%
ggplot(aes(y=x36ar_40ar,x=x39ar_40ar)) +
geom_smooth(method = 'lm',se=FALSE) +
stat_regline_equation(label.x=0.000009) +
theme_bw() +
labs( x= "36Ar/40Ar",
y= "39Ar/40Ar",
title = "Inverse Isochron")
sd(x$x36ar_40ar)
p
p <- x %>%
ggplot(aes(x=x36ar_40ar,y=x39ar_40ar)) +
geom_smooth(method = 'lm',se=FALSE) +
stat_regline_equation(label.x=0.000009) +
theme_bw() +
labs( x= "36Ar/40Ar",
y= "39Ar/40Ar",
title = "Inverse Isochron")
sd(x$x36ar_40ar)
p <- x %>%
ggplot(aes(x=x36ar_40ar,y=x39ar_40ar)) +
geom_smooth(method = 'lm',se=FALSE) +
stat_regline_equation(label.x=0.000009) +
theme_bw() +
labs( x= "36Ar/40Ar",
y= "39Ar/40Ar",
title = "Inverse Isochron")
sd(x$x36ar_40ar)
p
ggsave("../inverse_isochron_1_hw2_isotope.png",p)
library(tidyverse)
library(janitor)
knitr::opts_chunk$set(echo = FALSE)
read_csv("./Data/Soil_Predators.csv")
df <- read_csv("./Data/Soil_Predators.csv")
df <- read_csv("./Data/Soil_Predators.csv",col_names = FALSE,skip = 1)
badcolnames <- readLines(path,n=1)
badcolnames <- badcolnames %>% str_replace_all(",_","_") %>% str_split(",") %>% unlist()
path <- "./Data/Soil_Predators.csv"
df <- read_csv(path,col_names = FALSE,skip = 1)
badcolnames <- readLines(path,n=1)
badcolnames <- badcolnames %>% str_replace_all(",_","_") %>% str_split(",") %>% unlist()
df <- df %>% select(-c(X25,X26))
names(df) <- badcolnames
View(df)
skimr::skim(df)
library(tidyverse)
path <- "./Data/Soil_Predators.csv"
df <- read_csv(path,col_names = FALSE,skip = 1)
df <- read_csv(path,col_names = FALSE,skip = 1)
badcolnames <- readLines(path,n=1)
badcolnames <- readLines(path,n=1)
badcolnames <- badcolnames %>% str_replace_all(",_","_") %>% str_split(",") %>% unlist()
names(df) <- badcolnames
skimr::skim(df)
```{r}
library(tidyverse)
path <- "./Data/Soil_Predators.csv"
df <- read_csv(path,col_names = FALSE,skip = 1)
skimr::skim(df)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
df %>% select(starts_with("Consumption")) %>% rowSums(na.rm = TRUEx)
df %>% select(starts_with("Consumption")) %>% rowSums(na.rm = TRUE)
View(df)
library(tidyverse)
path <- "./Data/Soil_Predators.csv"
df <- read_csv(path,col_names = FALSE,skip = 1)
df <- read_csv(path,col_names = FALSE,skip = 1)
badcolnames <- readLines(path,n=1)
df <- df %>% select(-c(X25,X26))
names(df) <- badcolnames
View(df)
df %>% select(starts_with("Consumption")) %>% rowSums(na.rm = TRUE)
View(df)
badcolnames <- readLines(path,n=1)
badcolnames <- badcolnames %>% str_replace_all(",_","_") %>% str_split(",") %>% unlist()
df <- df %>% select(-c(X25,X26))
View(df)
names(df) <- badcolnames
View(df)
skimr::skim(df) %>%
as.data.frame() %>%
kableExtra::kable() %>%
kableExtra::kable_classic(lightable_options = 'hover')
df %>% select(starts_with("Consumption")) %>% rowSums(na.rm = TRUE)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(easystats)
library(MASS)
m1 <- glm(data = mpg,
formula = hwy ~ manufacturer + model + displ + year + cyl + drv)
m2 <- glm(data = mpg,
formula = hwy ~ model * cyl * drv)
m3 <- glm(data = mpg,
formula = hwy ~ manufacturer * model * displ)
compare_performance(m1,m2,m3) %>% plot
mpg %>%
ggplot(aes(x=hwy,y=displ,color = manufacturer)) +
geom_smooth() +
theme_bw()
mpg %>%
ggplot(aes(x=year,y=hwy,color = manufacturer)) +
geom_smooth() +
theme_bw()
mpg %>%
ggplot(aes(x=year,y=hwy,color = manufacturer)) +
geom_smooth() +
theme_bw()
mpg %>%
ggplot(aes(x=year,y=hwy,color = manufacturer)) +
geom_point()+
geom_smooth() +
theme_bw()
mpg %>%
ggplot(aes(x=displ,y=hwy,color = manufacturer)) +
geom_point()+
geom_smooth() +
theme_bw()
mpg %>%
ggplot(aes(x=displ,y=hwy,color = year)) +
geom_point()+
geom_smooth() +
theme_bw()
mpg %>%
ggplot(aes(x=displ,y=hwy,color = model)) +
geom_point()+
geom_smooth() +
theme_bw()
mpg %>%
ggplot(aes(x=displ,y=hwy,color = displ)) +
geom_point()+
geom_smooth() +
theme_bw()
mpg %>%
ggplot(aes(x=displ,y=hwy)) +
geom_point()+
geom_smooth() +
theme_bw()
mpg %>%
ggplot(aes(x=displ,y=hwy)) +
geom_point()+
geom_smooth() +
theme_bw() +
facet_wrap(~manufacturer)
mpg %>%
ggplot(aes(x=cyl,y=hwy)) +
geom_point()+
geom_smooth() +
theme_bw() +
facet_wrap(~manufacturer)
mpg %>%
ggplot(aes(x=year,y=hwy)) +
geom_point()+
geom_smooth() +
theme_bw() +
facet_wrap(~manufacturer)
mpg %>%
ggplot(aes(x=drv,y=hwy)) +
geom_point()+
geom_smooth() +
theme_bw() +
facet_wrap(~manufacturer)
mpg %>%
ggplot(aes(x=displ,y=hwy)) +
geom_point()+
geom_smooth() +
theme_bw() +
facet_wrap(~manufacturer)
mpg %>%
ggplot(aes(x=displ,y=hwy,color = manufacturer)) +
geom_point()+
geom_smooth() +
theme_bw()
mpg %>%
ggplot(aes(x=displ,y=hwy,color = manufacturer)) +
geom_point()+
geom_smooth(~manufacturer) +
theme_bw()
mpg %>%
ggplot(aes(x=displ,y=hwy,color = manufacturer)) +
geom_point()+
geom_smooth() +
theme_bw()
mpg %>%
ggplot(aes(x=displ,y=hwy,color = year)) +
geom_point()+
geom_smooth() +
theme_bw()
mpg %>%
ggplot(aes(x=displ,y=hwy,color = year)) +
geom_point()+
geom_smooth() +
theme_bw() +
facet_wrap(~manufacturer)
mpg %>%
ggplot(aes(x=displ,y=hwy,color = year)) +
geom_point()+
geom_smooth() +
theme_bw()
m1 <- glm(data = mpg,
formula = hwy ~ cyl)
m2 <- glm(data = mpg,
formula = hwy ~ year)
m3 <- glm(data = mpg,
formula = hwy ~ displ)
compare_performance(m1,m2,m3) %>% plot
ggplot(aes(x=displ,y=hwy) +
ggplot(aes(x=displ,y=hwy) +
mpg %>%
ggplot(aes(x=displ,y=hwy)) +
geom_point()+
geom_smooth() +
theme_bw()
mpg %>%
```{r echo=TRUE}
mpg %>%
ggplot(aes(x=displ,y=hwy)) +
geom_point() +
geom_smooth() +
theme_bw()
mpg %>%
ggplot(aes(x=displ,y=hwy)) +
geom_point() +
geom_smooth() +
theme_bw() +
labs(x="Highway MPG",
y= "Displacement",
title= "MPG vs Displacement")
mpg %>%
ggplot(aes(x=displ,y=hwy)) +
geom_point() +
geom_smooth() +
theme_bw() +
labs(y="Highway MPG",
x= "Displacement",
title= "MPG vs Displacement")
mpg %>%
ggplot(aes(x=displ,y=hwy)) +
geom_point() +
geom_smooth() +
theme_bw() +
labs(y="Highway mpg",
x= "Displacement",
title= "MPG vs Displacement")
mpg %>%
ggplot(aes(x=displ,y=hwy)) +
geom_point() +
geom_smooth() +
theme_bw() +
labs(y="highway mpg",
x= "displacement",
title= "mpg vs displacement")
mpg %>%
ggplot(aes(x=displ,y=hwy)) +
geom_point() +
geom_smooth() +
theme_bw() +
facet_wrap(~year)
#plotting best model and facet wrapping by year
```{r}
mpg %>%
ggplot(aes(x=displ,y=hwy)) +
geom_point() +
geom_smooth() +
theme_minimal() +
facet_wrap(~year)
mpg %>%
ggplot(aes(x=displ,y=hwy)) +
geom_point() +
geom_smooth() +
theme_minimal() +
facet_wrap(~year)
# plotting best model and facet wrapping by year
```{r echo=FALSE, fig.height=2, fig.width=2}
m3 %>% broom::tidy()
df <- m3 %>% broom::tidy()
df
df %>%
kable() %>%
kable_classic()
library(kableExtra)
df %>%
kable() %>%
kable_classic()
library(rasterVis)
library(raster)
library(tidyverse)
library(viridis)
library(rgdal)
library(rasterVis)
library(raster)
library(tidyverse)
library(viridis)
library(terra)
library(randomForest)
library(e1071)
#grabbing all aster files
directory_path <- "../../ASTER/2005_10_01/AST_L1B_00310012005182513_20231130134446_13225/"
# Use list.files with pattern argument to filter files
tif_files <- list.files(directory_path, pattern = "\\.tif$", full.names = TRUE)
#turning into raster
band1 <- rast(tif_files[12])
band2 <- rast(tif_files[13])
# Use list.files with pattern argument to filter files
tif_files <- list.files(directory_path, pattern = "\\.tif$", full.names = TRUE)
#grabbing all aster files
directory_path <- "../../ASTER/2005_10_01/AST_L1B_00310012005182513_20231130134446_13225/"
# Use list.files with pattern argument to filter files
tif_files <- list.files(directory_path, pattern = "\\.tif$", full.names = TRUE)
# Print the list of filtered TIFF files
print(tif_files)
#grabbing all aster files
directory_path <- "../ASTER/2005_10_01/AST_L1B_00310012005182513_20231130134446_13225/"
# Use list.files with pattern argument to filter files
tif_files <- list.files(directory_path, pattern = "\\.tif$", full.names = TRUE)
# Print the list of filtered TIFF files
print(tif_files)
#turning into raster
band1 <- rast(tif_files[12])
band2 <- rast(tif_files[13])
band3B <- rast(tif_files[14])
band3N <- rast(tif_files[15])
band4 <- rast(tif_files[1])
band5 <- rast(tif_files[2])
band6 <- rast(tif_files[3])
band7 <- rast(tif_files[4])
band8 <- rast(tif_files[5])
band9 <- rast(tif_files[6])
#rectifying
band1 <- rectify(band1)
band2 <- rectify(band2)
band3B <- rectify(band3B)
band3N <- rectify(band3N)
band4 <- rectify(band4)
band5 <- rectify(band5)
band6 <- rectify(band6)
band7 <- rectify(band7)
band8 <- rectify(band8)
band9 <- rectify(band9)
#setting extent
e <- as(extent(360000, 390000, 4235000, 4265000),'SpatialPolygons')
#cropping all by extent
band1 <- crop(band1,e)
band2 <- crop(band2,e)
band3N <- crop(band3N,e)
band3B <- crop(band3B,e)
band4 <- crop(band4,e)
band5 <- crop(band5,e)
band6 <- crop(band6,e)
band7 <- crop(band7,e)
band8 <- crop(band8,e)
band9 <- crop(band9,e)
#aggregating to make all bands have the same resolution
band1 <- aggregate(band1,2)
band2 <- aggregate(band2,2)
band3B <- aggregate(band3B,2)
band3N <- aggregate(band3N,2)
#resamplling pixels
band4 <- resample(band4,band1)
band5 <- resample(band5,band1)
band6 <- resample(band6,band1)
band7 <- resample(band7,band1)
band8 <- resample(band8,band1)
band9 <- resample(band9,band1)
#stacking all bands
aster <-  c(band1,band2,band3B,band3N,band4,band5,band6,band7,band8,band9)
#
histogram(values(aster))
values(aster)
aster
#DN to spectral radiance using normal gain
band1 = (band1-1)*1.688
band2 = (band2-1)*1.415
band3N = (band3N-1)*0.862
band3B = (band3B-1)*0.862
band4 = (band4-1)*0.2174
band5 = (band5-1)*0.0696
band6 = (band6-1)*0.0625
band7 = (band7-1)*0.0597
band8 = (band8-1)*0.0417
band9 = (band9-1)*0.0318
#TOA reflectance
readLines("../ASTER/2005_10_01/AST_L1B_00310012005182513_20231130134446_13225/AST_L1B_00310012005182513_20231130134446_13225.Ancillary_Data.txt")
#TOA reflectance
readLines("../ASTER/2005_10_01/AST_L1B_00310012005182513_20231130134446_13225/AST_L1B_00310012005182513_20231130134446_13225.SWIR_Supplement.txt")
#TOA reflectance
readLines("../ASTER/2005_10_01/AST_L1B_00310012005182513_20231130134446_13225/AST_L1B_00310012005182513_20231130134446_13225.VNIR_Swath.Latitude.txt")
#PCA
library(rasterVis)
library(raster)
library(tidyverse)
library(viridis)
library(gridExtra)
library(shiny)
library(imager)
#PCA
library(rasterVis)
library(raster)
library(tidyverse)
library(viridis)
library(gridExtra)
library(shiny)
library(raster)
library(tidyverse)
library(sf)
library(rpart)
library(rpart.plot)
library(rasterVis)
library(mapedit)
library(mapview)
library(caret)
library(forcats)
library(grid)
bands <- lapply(1:7, function(i) raster(paste0("../../landsat/LC09_L2SP_038033_20231019_20231020_02_T1/LC09_L2SP_038033_20231019_20231020_02_T1/LC09_L2SP_038033_20231019_20231020_02_T1_SR_B", i, ".TIF")))
bands <- lapply(1:7, function(i) raster(paste0("../landsat/LC09_L2SP_038033_20231019_20231020_02_T1/LC09_L2SP_038033_20231019_20231020_02_T1/LC09_L2SP_038033_20231019_20231020_02_T1_SR_B", i, ".TIF")))
bands <- lapply(1:7, function(i) stack(paste0("../landsat/LC09_L2SP_038033_20231019_20231020_02_T1/LC09_L2SP_038033_20231019_20231020_02_T1/LC09_L2SP_038033_20231019_20231020_02_T1_SR_B", i, ".TIF")))
bands <- lapply(1:7, function(i) stack(paste0("../landsat/LC09_L2SP_038033_20231019_20231020_02_T1/LC09_L2SP_038033_20231019_20231020_02_T1/LC09_L2SP_038033_20231019_20231020_02_T1_SR_B", i, ".TIF")))
bands
bands <- stack(lapply(1:7, function(i) raster(paste0("../landsat/LC09_L2SP_038033_20231019_20231020_02_T1/LC09_L2SP_038033_20231019_20231020_02_T1/LC09_L2SP_038033_20231019_20231020_02_T1_SR_B", i, ".TIF"))))
band1 <- raster("../../landsat/LC09_L2SP_038033_20231019_20231020_02_T1/LC09_L2SP_038033_20231019_20231020_02_T1/LC09_L2SP_038033_20231019_20231020_02_T1_SR_B1.TIF")
band2 <- raster("../../landsat/LC09_L2SP_038033_20231019_20231020_02_T1/LC09_L2SP_038033_20231019_20231020_02_T1/LC09_L2SP_038033_20231019_20231020_02_T1_SR_B2.TIF")
band3 <- raster("../../landsat/LC09_L2SP_038033_20231019_20231020_02_T1/LC09_L2SP_038033_20231019_20231020_02_T1/LC09_L2SP_038033_20231019_20231020_02_T1_SR_B3.TIF")
